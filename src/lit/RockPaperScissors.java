package lit;

import lit.Loss;
import lit.Loss;
import lit.Loss;
import lit.Win;
import lit.Win;
import lit.Win;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author thbar7035
 */
public class RockPaperScissors extends javax.swing.JFrame {
    //declaring variables
    int signal;    
    int enemy;
    int score=0;
    int enemyScore=0;

    /**
     * Creates new form RockPaperScissors
     */
    public RockPaperScissors() {
        initComponents();
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        paperButton = new javax.swing.JButton();
        rockButton = new javax.swing.JButton();
        scissorsButton = new javax.swing.JButton();
        lizzardButton = new javax.swing.JButton();
        spockButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ownImage = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        enemyImage = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        enemyScoreLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 51));
        titleLabel.setText("ROCK PAPER SCISSORS LIZZARD SPOCK FELLA");

        paperButton.setText("PAPER");
        paperButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperButtonActionPerformed(evt);
            }
        });

        rockButton.setText("ROCK");
        rockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockButtonActionPerformed(evt);
            }
        });

        scissorsButton.setText("SCISSORS");
        scissorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorsButtonActionPerformed(evt);
            }
        });

        lizzardButton.setText("LIZZARD");
        lizzardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lizzardButtonActionPerformed(evt);
            }
        });

        spockButton.setText("SPOCK");
        spockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spockButtonActionPerformed(evt);
            }
        });

        resultLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultLabel.setForeground(new java.awt.Color(255, 255, 51));
        resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 255));
        jLabel2.setText("You Chose");

        ownImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\MediumThonk.png")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 255));
        jLabel3.setText("It Chose");

        enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\thotlet.png")); // NOI18N

        scoreLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(0, 255, 0));
        scoreLabel.setText("0");

        enemyScoreLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        enemyScoreLabel.setForeground(new java.awt.Color(255, 0, 0));
        enemyScoreLabel.setText("0");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 255, 0));
        jLabel4.setText("/3");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("/3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addGap(50, 50, 50))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(paperButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(scissorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(lizzardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ownImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(287, 287, 287)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(enemyImage)
                                .addGap(21, 21, 21))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(scoreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(enemyScoreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(enemyImage))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ownImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paperButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scissorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lizzardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(enemyScoreLabel)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(scoreLabel)
                        .addComponent(jLabel4)))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //if rock button pressed
    private void rockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockButtonActionPerformed
        //signal means what hand signal was used, 1 is rock
        signal = 1;
        //randomly selects opponents hand signal        
        enemy = (int)(Math.random() * 5 + 1);
        //FOR FUTURE REFERENCE
        /*
        1 = rock
        2 = paper
        3 = scissors
        4 = lizard
        5 = spock
        */
        
        //changes the players image to rock
        ownImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Rock.jpg"));
        
        //this section works out if you won, lost, or tied. Changes score acordingly
        if (enemy == 1){
            resultLabel.setText("It's a draw, stand down");
        }
        else if (enemy == 2){
            resultLabel.setText("You lost, and you suck");
            enemyScore=enemyScore+1;
        }
        else if (enemy == 3){
            resultLabel.setText("You win, SMASH SMASH"); 
            score=score+1;
        }
        else if (enemy == 4){
            resultLabel.setText("You win, crush that lizard!");
            score=score+1;
        }
        else {
            resultLabel.setText("You lost, spocks got lazers");
            enemyScore=enemyScore+1;
        }
        
        
        
        //this checks if somebody's won
        if (score == 3){
            this.dispose();
            Win w = new Win();
            w.setVisible(true);
        }
        else if (enemyScore == 3){
            this.dispose();
            Loss l = new Loss();
            l.setVisible(true);
        }
        
       
        
        
        
        
        //changes oponents image depending on what hand signal they got
        if (enemy == 1){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Rock.jpg")); 
        }
        else if (enemy == 2){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Paper.jpg")); 
        }
        else if (enemy == 3){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Scissors.jpg")); 
        }
        else if (enemy == 4){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Lizard.png"));
        }
        else {
            enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Spock.png"));
        }
        
        //changes the "0/3" for player and oponent scores
        scoreLabel.setText(""+score);
        enemyScoreLabel.setText(""+enemyScore);
        
        
        
        
    }//GEN-LAST:event_rockButtonActionPerformed
    //if paper button presed
    private void paperButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperButtonActionPerformed
        //set signal to paper
        signal = 2;
        //select oponent signal
        enemy = (int)(Math.random() * 5 + 1);
        
        //sets own image to paper
        ownImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Paper.jpg"));
        
        //win/loss/tie checks, and apropriate score changes
        if (enemy == 1){
            resultLabel.setText("You win, smush");
            score=score+1;
        }
        else if (enemy == 2){
            resultLabel.setText("It's a draw, stand down");
        }
        else if (enemy == 3){
            resultLabel.setText("You lost, snip snip");
            enemyScore=enemyScore+1;
        }
        else if (enemy == 4){
            resultLabel.setText("You lost, nibble nibble");
            enemyScore=enemyScore+1;
        }
        else {
            resultLabel.setText("You win, JEBAITED");
            score=score+1;
        }
        
        
        //this checks if somebody's won
        if (score == 3){
            this.dispose();
            Win w = new Win();
            w.setVisible(true);
        }
        else if (enemyScore == 3){
            this.dispose();
            Loss l = new Loss();
            l.setVisible(true);
        }
        
        
        //change oponents image depending on what they got
        if (enemy == 1){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Rock.jpg")); 
        }
        else if (enemy == 2){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Paper.jpg")); 
        }
        else if (enemy == 3){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Scissors.jpg")); 
        }
        else if (enemy == 4){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Lizard.png"));
        }
        else {
            enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Spock.png"));
        }
        
        //change score totals for both
        scoreLabel.setText(""+score);
        enemyScoreLabel.setText(""+enemyScore);
    }//GEN-LAST:event_paperButtonActionPerformed
    //if scissors button pressed
    private void scissorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorsButtonActionPerformed
        //sets signal as scissors
        signal = 3;
        //selects oponents signal
        enemy = (int)(Math.random() * 5 + 1);
        
        //sets own image to scissors
        ownImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Scissors.jpg"));
        
        //win/loss/tie with score changes
        if (enemy == 1){
            resultLabel.setText("You lost, SMASH SMASH");
            enemyScore=enemyScore+1;
        }
        else if (enemy == 2){
            resultLabel.setText("You win, snip snip");
            score=score+1;
        }
        else if (enemy == 3){
            resultLabel.setText("It's a draw, stand down");
        }
        else if (enemy == 4){
            resultLabel.setText("You won, mutilation!!!");
            score=score+1;
        }
        else {
            resultLabel.setText("You lost, spocks got a screwdriver");
            enemyScore=enemyScore+1;
        }
        
        
        
        //this checks if somebody's won
        if (score == 3){
            this.dispose();
            Win w = new Win();
            w.setVisible(true);
        }
        else if (enemyScore == 3){
            this.dispose();
            Loss l = new Loss();
            l.setVisible(true);
        }
        
        
        //changes oponents image
        if (enemy == 1){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Rock.jpg")); 
        }
        else if (enemy == 2){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Paper.jpg")); 
        }
        else if (enemy == 3){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Scissors.jpg")); 
        }
        else if (enemy == 4){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Lizard.png"));
        }
        else {
            enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Spock.png"));
        }
        
        //updates score totals
        scoreLabel.setText(""+score);
        enemyScoreLabel.setText(""+enemyScore);
    }//GEN-LAST:event_scissorsButtonActionPerformed
    //if lizzard button pressed
    private void lizzardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lizzardButtonActionPerformed
        //sets signal to lizzard
        signal = 4;
        //oponent signal
        enemy = (int)(Math.random() * 5 + 1);
        
        //sets own image to lizzard
        ownImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Lizard.png"));
        
        //win/loss/tie with score changes
        if (enemy == 1){
            resultLabel.setText("You lost, git smushed");
            enemyScore=enemyScore+1;
        }
        else if (enemy == 2){
            resultLabel.setText("You won, nibble nibble");
            score=score+1;
        }
        else if (enemy == 3){
            resultLabel.setText("You lost, MUTILATION!!!");
            enemyScore=enemyScore+1;
        }
        else if (enemy == 4){
            resultLabel.setText("Draw, LIZZARD HIGHFIVE");
        }
        else {
            resultLabel.setText("You win, spock doesn't have poison resistance");
            score=score+1;
        }
        
        
        //this checks if somebody's won
        if (score == 3){
            this.dispose();
            Win w = new Win();
            w.setVisible(true);
        }
        else if (enemyScore == 3){
            this.dispose();
            Loss l = new Loss();
            l.setVisible(true);
        }
        
        
        //changes oponents image
        if (enemy == 1){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Rock.jpg")); 
        }
        else if (enemy == 2){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Paper.jpg")); 
        }
        else if (enemy == 3){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Scissors.jpg")); 
        }
        else if (enemy == 4){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Lizard.png"));
        }
        else {
            enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Spock.png"));
        }
        
        //updates score totals
        scoreLabel.setText(""+score);
        enemyScoreLabel.setText(""+enemyScore);
    }//GEN-LAST:event_lizzardButtonActionPerformed

    private void spockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spockButtonActionPerformed
        //sets signal to SPOCK
        signal = 5;
        //sets oponents image
        enemy = (int)(Math.random() * 5 + 1);
        
        //own image to spock
        ownImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Spock.png"));
        
        //win/loss/tie with score changes
        if (enemy == 1){
            resultLabel.setText("You win, ZAP");
            score=score+1;
        }
        else if (enemy == 2){
            resultLabel.setText("You lost, JEBAITED");
            enemyScore=enemyScore+1;
        }
        else if (enemy == 3){
            resultLabel.setText("You won, screwdriver powers");
            score=score+1;
        }
        else if (enemy == 4){
            resultLabel.setText("You lost, feel the burn...cholera");
            enemyScore=enemyScore+1;
        }
        else {
            resultLabel.setText("Draw, spocks time traveling again");
        }
        
        
        
        //this checks if somebody's won
        if (score == 3){
            this.dispose();
            Win w = new Win();
            w.setVisible(true);
        }
        else if (enemyScore == 3){
            this.dispose();
            Loss l = new Loss();
            l.setVisible(true);
        }
        
        
        
        //changes oponents image
        if (enemy == 1){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Rock.jpg")); 
        }
        else if (enemy == 2){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Paper.jpg")); 
        }
        else if (enemy == 3){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Scissors.jpg")); 
        }
        else if (enemy == 4){
           enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Lizard.png"));
        }
        else {
            enemyImage.setIcon(new javax.swing.ImageIcon("Y:\\Documents\\Rock Paper Scissors\\Spock.png"));
        }
        
        //updates score totals
        scoreLabel.setText(""+score);
        enemyScoreLabel.setText(""+enemyScore);
        
    }//GEN-LAST:event_spockButtonActionPerformed

    
   
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RockPaperScissors().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enemyImage;
    private javax.swing.JLabel enemyScoreLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton lizzardButton;
    private javax.swing.JLabel ownImage;
    private javax.swing.JButton paperButton;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JButton rockButton;
    private javax.swing.JButton scissorsButton;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JButton spockButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
